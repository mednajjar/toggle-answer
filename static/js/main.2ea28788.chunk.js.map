{"version":3,"sources":["view.js","question.js","App.js","reportWebVitals.js","index.js"],"names":["View","question","answer","useState","show","setShow","class","className","onClick","Question","id","App","map","quest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAGe,SAASA,EAAT,GAAmC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,OAAS,EACvBC,oBAAS,GADc,mBACtCC,EADsC,KAChCC,EADgC,KAE7C,OACI,+BACI,sBAAKC,MAAM,aAAX,UACI,sBAAKC,UAAU,QAAf,UACI,6BAAKN,IACL,wBAAQO,QAAS,kBAAIH,GAASD,IAA9B,SACKA,EAAO,cAAC,IAAD,CAAuBG,UAAU,SAAW,cAAC,IAAD,CAAyBA,UAAU,cAI3FH,GAAQ,4BAAIF,SCfhC,IAuBeO,EAvBE,CACb,CACIC,GAAG,EACHT,SAAU,4BACVC,OAAQ,qJAEZ,CACIQ,GAAG,EACHT,SAAU,4CACVC,OAAQ,8OAEZ,CACIQ,GAAG,EACHT,SAAU,4CACVC,OAAQ,uJAEZ,CACIQ,GAAG,EACHT,SAAU,kDACVC,OAAQ,qLCMDS,MApBf,WAAgB,IAAD,EACkBR,mBAASM,GAD3B,mBACNR,EADM,KAGb,OAHa,KAIX,sBAAKM,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACC,qEAGD,yBAASA,UAAU,YAAnB,SAEKN,EAASW,KAAI,SAACC,GACZ,OAAO,cAACb,EAAD,eAAyBa,GAAdA,EAAMH,aCLtBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2ea28788.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { FaRegArrowAltCircleDown, FaRegArrowAltCircleUp} from \"react-icons/fa\";\r\n\r\nexport default function View({question, answer}) {\r\n    const [show, setShow]=useState(false)\r\n    return (\r\n        <main>\r\n            <div class=\"container2\">\r\n                <div className=\"quest\">\r\n                    <h3>{question}</h3>\r\n                    <button onClick={()=>setShow(!show)}>\r\n                        {show ? <FaRegArrowAltCircleUp className=\"icon\"/> : <FaRegArrowAltCircleDown className=\"icon\"/>  }\r\n                    </button>\r\n                </div>\r\n                {\r\n                    show && <p>{answer}</p> \r\n                }\r\n                 \r\n            </div>\r\n            \r\n        </main>\r\n    )\r\n}\r\n","const Question = [\r\n    {\r\n        id:1,\r\n        question: 'Is my account set up yet?',\r\n        answer: 'To verify if your user account is set-up, you may try to logon using the username and password provided to you via email from Checkpoint Systems.'\r\n    },\r\n    {\r\n        id:1,\r\n        question: 'What should I do if I forget my password?',\r\n        answer: 'Enter your username in the Username entry box provided on the login screen.  Select the Forgot your password? link.  A dialog box will be displayed asking if you “Are sure you would like to reset your password”.  Select yes.'\r\n    },\r\n    {\r\n        id:1,\r\n        question: 'What should I do if I forget my Username?',\r\n        answer: 'Please send an email or phone your Checkpoint Customer Service Representative and state that you have lost or forgotten your username and password.'\r\n    },\r\n    {\r\n        id:1,\r\n        question: 'How do I know the site has a secure connection?',\r\n        answer: 'CheckNet is a VeriSign secure site.  To verify CheckNet is the site you intended to access in a secure fashion prior to sending any secure information select the VeriSign Logo.'\r\n    }\r\n]\r\n\r\nexport default Question;","import React, {useState} from 'react';\nimport './App.css';\nimport View from './view';\nimport Question from './question';\n\nfunction App() {\n  const [question, setQuestion]= useState(Question);\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>Questions And Answers About Login</h1>\n       \n      </header>\n      <section className=\"container\">\n         {\n           question.map((quest)=>{\n             return <View key={quest.id} {...quest} />\n           })\n         }\n       </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}